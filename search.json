[{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://matroth.github.io/questionlink/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"motivation-and-methodological-background","dir":"Articles","previous_headings":"","what":"00 Motivation and methodological background","title":"Questionlink tutorial","text":"QuestionLink R-package aims help researchers want harmonize survey data concept gathered different questions. Specifically, focus lies (single) survey questions used capture latent construct, attitudes, values, interests, subjective evaluations. Consider two different questions respondents’ subjective evaluation general health: European Social Survey (ESS) health general? say … good / Good / Fair / Bad / bad International Social Survey Programme (ISSP) general, say health … Excellent / good / Good / Fair / Poor compare (even combine) responses two questions? problems purview ex-post harmonization, methodological field seeks assess improve comparability data already collected. harmonization can challenging, increasing comparability combining (survey) data across different data sources opens many new opportunities research. follows, give brief overview challenges entails motivate QuestionLink R package.","code":""},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"harmononizing-single-item-survey-questions-for-latent-constructs","dir":"Articles","previous_headings":"00 Motivation and methodological background","what":"Harmononizing (single-item) survey questions for latent constructs","title":"Questionlink tutorial","text":"Harmonizing data measured different questions across different surveys easy. example, can even think combining data across different questions, need ensure different questions actually measure concept. However, even , often need align measurement units. words, comparing combining data across questions, need ensure numerical response scores imply level measured construct. Consider example general health. Now imagine respondent chose third response option (“good”) ISSP question. response chosen ESS question? Also third response option? “fair” ESS. perhaps also chosen “good” ESS; thus choosing second instead third response option. case, certain. turns , empirical reality complicated just matching response options via recoding. Instead, least ESS ISSP waves Germany, QuestionLink derived following harmonization solution ISSP ESS:  turns , matching “3” ISSP question “3” ESS question inadequate. seems plausible, since “good” “fair” rather different response labels. matching “good” “good” across ISSP ESS also work perfectly. , respondents take whole response scale account answering question.","code":""},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"harmonizing-measurement-units","dir":"Articles","previous_headings":"00 Motivation and methodological background > Harmononizing (single-item) survey questions for latent constructs","what":"Harmonizing measurement units","title":"Questionlink tutorial","text":"However, derive values justified? understand happening , take step back look difference (observed) response scores (latent) construct expressions. single question measuring latent construct (general health), keep mind construct natural categories levels. Instead, latent construct respondents’ minds amorphous ideas can best understood continuous value. respondents answer question construct, recall (infer) approximate position latent, continuous dimension. However, express position directly survey. Instead, choose response option feel best represents position. response options continuous, discrete () ordinal. words, observed response scores product respondents mapping continous latent construct value onto discrete, ordinal response scheme. Visually, might imagine sample respondents continuous distribution “true” latent construct values. Depending value, .e., position continuum, choose response option. implies response options “cut” distribution latent scores ordinal response scores. (simplified view ignores random response error. realistic model, consider IRT models differential item functioning methods general.)  practice, social scientists often ignore detail, can often treat ordinal observed response scores pseudo-metric. However, harmonize two different questions construct, issue becomes pressing. different questions (different wording, different response scales etc.) project latent scores differently onto observed scores. “cut” latent continuum ordinal scores different thresholds; thresholds different positions even different number thresholds number response options differs. bit issue, recommend reading blog post. can bridge differences two () questions construct? Commonly considered approaches linear stretching z-standardization. insufficient cases, discover section insufficient alternatives.","code":""},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"observed-score-equating-in-a-random-groups-design-ose-rg","dir":"Articles","previous_headings":"00 Motivation and methodological background > Harmononizing (single-item) survey questions for latent constructs","what":"Observed score equating in a random groups design (OSE-RG)","title":"Questionlink tutorial","text":"Instead alternatives, QuestionLink applies method called observed score equating random groups design (OSE-RG). context, can give basic intuition. interested, recommend two sources delve deeper equating. Kolen Brennan cover equating -depth book: Kolen, M. J., & Brennan, R. L. (2014). Test Equating, Scaling, Linking (3rd ed.). Springer. https://doi.org/10.1007/978-1-4939-0317-7 However, equating originally conceived harmonize multi-item scales. applying equating algorithms harmonize two single survey questions, see: Singh, R. K. (2022). Harmonizing single-question instruments latent constructs equating using political interest example. Survey Research Methods, 16(3), 353–369. https://doi.org/10.18148/srm/2022.v16i3.7916 However, can quickly get intuition OSE-RG works. core, OSE-RG tries answer question respondent certain observed score one question answer, average, another question construct. example , respondent chose “3 - good” ISSP choose ESS question average? result OSE-RG : 2.29 average. “average” acknowledges role random response error well fact seldom exact integer correspondence response options two questions (e.g., 3 = 4). still leaves question, can get equivalent values. first idea might show respondents questions compare responses. setup, might take respondents choose “1” question average responses gave question B get equivalent value. repeat process scores 2, 3, . , fact, practiced equating approach multi-item scales called single-group design. However, single questions survey research, approach often feasible. First, procedure works respondents answeres questions independent. Yet two questions, respondents probably rememer previous answer. creates bias even randomized order solve completely. Second, almost never single-group data available existing survey data sources might able afford collecting single-group data questions combinations harmonization project. “RG” OSE-RG already implies, use another research design QuestionLink: random groups design. approach best understood imagine split-half experiment, one random half respondents sees one question half question. Now important point due randomness group assignment, expect systematic differences groups terms actual construct values. experiment, groups latent distribution relevant construct. feel equally healthy average, standard deviation . However, distribution measured values quite different, question maps latent distribution differently onto observed response scores. Visually, might imagine situation like :  continuous distributions middle “true” contruct distributions random groups. mirror , identical random groups design. However, see two questions () different thresholds. map latent scores differently onto observed response scores. means, example, person specific general health (yellow point), choose different responses two questions. result aggregate level get two different observed response distributions (think: frequency tables) two questions, even though measure latent distribution. Responses questions , , randomly drawn population:  OSE-RG now simply transform scores one question observed response distribution aligns shape question’s observed response distribution. sounds abstract, actually really intuitive. Imagine want harmonize two questions know underlying population (thus latent distribution) . average responses two questions , successful harmonization? Identical, course. , random groups true mean construct score (e.g., mean general health). Similarly, expect standard deviation, skewness, kurtosis. feed data OSE-RG algorithm, get, essence, recording table can harmonize one question format . apply , get just want: response distribution shape random groups setting, regardless question. different algorithms achieve . simplest linear equating, assumes normally distributed responses harmonizes mean standard deviation. However, since response distributions often skewed, instead use equipercentile equating, flexible also harmonizes differences skewness kurtosis. can learn algorithms two blog posts linear equating equipercentile equating. However, nutshell, equipercentile equating looks cumulative relative frequencies questions random groups data (.e., 10% chose response 1, 25% chose response 2 less, 37% chose response 3 less ). algorithm transforms responses one question (B) percentiles. percentiles transformed back (continuous approximations) responses question ().  result harmonization looks like :  result recoding responses B distribution shape (e.g., mean standard deviation) now align B. Now important note harmonize current random groups data. Instead, recoding table derived random groups data, can use harmonize two questions many data sets well. assumption need two questions work samples well (see section \\[#Population invariance\\]).","code":""},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"finding-random-groups-data","dir":"Articles","previous_headings":"00 Motivation and methodological background > Harmononizing (single-item) survey questions for latent constructs","what":"Finding random groups data","title":"Questionlink tutorial","text":"remaining issue usually perform methodological split-half experiments many questions might want harmonize project. However, harmonize data survey programs might find already random groups data, least questions construct want harmonize. Specifically, looking instances two questions used random samples population time. example, imagine two survey programs randomly sample adult German population along overlapping time series. take samples surveys (respective questions construct) year use equating.  approach advantage can reuse existing data. Data likely researched prepared harmonization project anyway. However, finding links can daunting done manually. Consider QuestionLink example general life satisfaction across several national international survey programs random samples adult German population:  figure shows us different questions general life satisfaction (black right plot). color, row one survey program used respective question. dot represents wave question used survey program specific year. one hand, figure makes us optimistic, finding opportunities equating across survey programs quite realistic, least common constructs. hand, still face obstacles. First, questions harmonize directly, share year used. Consider, example, questions “EVS 10pt” “GPANEL 5pt”. Second, also like use possible opportunities equating (.e., connection) instead just using one possible connection. equating, like empirical methods, comes random error (example due randomness sampling process). Combining several equatings makes robust. Fortunately, QuestionLink R-Package helps solves issues automatically. understand works, need consider three types connections provide opportunities equating. need understand aggregate results different connections.","code":""},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"types-of-connections","dir":"Articles","previous_headings":"00 Motivation and methodological background > Harmononizing (single-item) survey questions for latent constructs","what":"Types of connections","title":"Questionlink tutorial","text":"QuestionLink finds three types connections: Direct, time-relaxed, relay connections. first type, direct connections, case already discussed: Using data two questions used (random samples ) populations year:  However, sometimes can find instances two questions used almost year, direct connection. call time-relaxed connections, use need relax constraints put time overlap. QuestionLink R-package allows choose just much difference years want allow. Often, one year can enough. example, one survey covers even years survey covers odd years. Time-relaxation , course, easier justify constructs relatively stable time fluctuate year year. However, please consider QuestionLink uses possible connections one. often means counterbalancing time-relaxed connections (.e., harmonizing one year earlier harmonizing one year later):  final powerful tool relay connections. become possible, equating can chained. Imagine situation three questions, , B, C. happen random groups data -C B-C. However, goal harmonize C. Fortunately, can achieve easily equating C, equating values format C B. words, harmonize B via relay C. downside relay connections , incur random errors twice equating. However, can usually find many relay connections aggregating can mitigate issue.  three types connections, chances able harmonize questions construct interested risen dramatically. time, find apply connections left many equating solutions (~ recoding tables) question pair (directions; e.g., ->B & B->). likely, solutions fluctuate due random sampling errors. QuestionLink now aggregate harmonization solutions (one connection two questions one direction) single, robust harmonization solution. finding possible connections performing equatings connection, QuestionLink summarizes possible solutions question pair (one direction) single recoding table. done calculating median equivalent value score question want harmonize. result random errors mitigated large extent. might seem abstract, demonstrate practical terms section [retrieving recoding tables].","code":""},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"setting-up-a-simulated-population","dir":"Articles","previous_headings":"","what":"01 Setting up a simulated population","title":"Questionlink tutorial","text":"goal section next simulate survey responses different measurement instruments measure construct. , fist simulate underlying “true” development construct simulated population time. Usually, think true construct scores continuous, one-dimensional values. natural steps categories constructs political interest, life satisfaction, intelligence. Instead imagine seamless, gradual values along dimension. setup create data frame contain 2000 simulated construct values per year every year 1980 2020. code works follows step--step: create data frame (tibble tidyverse) populate year variable values 1980 2020. now, data frame 40 rows (one year). add variable target_construct_mean represents idealized trend time want simulated construct follow. formula nothing else create mean value -0.5 0.5. forty years, mean gradually (linearly) increase. Now simulate year sample 2000 true scores. simulation assumes normal distribution true scores around target mean (target_construct_mean) year standard distribution 1. “nest” vector containing 2000 scores cell variable simulated_true_score. Currently, data frame still 40 rows, cell last variable crammed 2000 values. last step, use unnest() arrive tidier data frame. unnest unfold score vectors simulated_true_score row contains one value. words, now unfold data frame 40 rows (row year) data frame 40 * 2000 = 80000 rows (row true construct value). sample_n() function, look 10 randomly selected rows 80000 rows simulated data frame. see row specific year, target construct mean target_construct_mean specific simulated value simulated_true_score.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(patchwork) library(tibble) library(tidyr) library(purrr) library(kableExtra) #>  #> Attaching package: 'kableExtra' #> The following object is masked from 'package:dplyr': #>  #>     group_rows library(patchwork) library(viridis) #> Loading required package: viridisLite library(ggplot2) library(forcats)  library(questionlink)  # Helpers  format_table <- function(df){   df |> kable() |>      kable_styling(position = \"left\",       full_width = FALSE       ) } survey_sample_n = 2000  sim_df <- tibble(   year = c(1980:2020),   # construct linearly increases over time   target_construct_mean = ((year - min(year))/ (max(year)-min(year)))-0.5,    simulated_true_score = map(target_construct_mean, ~ rnorm(survey_sample_n, .x, 1)) ) |> unnest(simulated_true_score)  sim_df |> sample_n(10) |> format_table()"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"simulated-change-over-time","dir":"Articles","previous_headings":"01 Setting up a simulated population","what":"Simulated change over time","title":"Questionlink tutorial","text":"Now can plot mean continuous construct scores time. see “true” average construct score simulated population slowly shifts one standard deviation course 40 years. substantive terms, imagine average opinion slowly, steadily increasing, year year.","code":"sim_df |>    ggplot(aes(year, simulated_true_score))+   geom_smooth(se = FALSE)+   theme_minimal()+   scale_y_continuous(breaks = c(-0.5, -0.25, 0, 0.25, 0.5),                      minor_breaks = NULL) #> `geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"normally-distributed-simulated-scores-per-year","dir":"Articles","previous_headings":"01 Setting up a simulated population","what":"Normally distributed simulated scores per year","title":"Questionlink tutorial","text":"However, mean values year hide actually (normal) distribution construct scores year. words, spread lower, medium, higher construct scores year. , see simulated “true” construct score distributions different years. better visibility, full decades shown. Observe distribution slowly wanders right, average value increases time. (unfamiliar type plots: density plot. shows construct values x-axis frequent data (probable value , actually). y-axis values meaningful values. simply chosen R area curve one, probability whole curve one, since represents values. intuition, think density plots histograms continuous data.)","code":"sim_df |>    filter(year %% 10 == 0) |> #only select full decades   ggplot(aes(simulated_true_score, color = year |> as.factor()))+   geom_density()+   scale_color_viridis(discrete = TRUE, end = 0.8)+ # coloring   theme_minimal()"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"simulating-survey-responses","dir":"Articles","previous_headings":"","what":"02 Simulating survey responses","title":"Questionlink tutorial","text":"Now simulated continuous construct values, need derive simulated response values. , survey respondents give decimal values answer. Instead, choose one several discrete, ordinal response options, “somewhat agree”. simulate , transform continuous, simulated scores discrete, integer response scores. done “cutting” continuous scores discrete responses certain thresholds, using cut_responses() helper function. (Please note simplistic view actual response processes, serves needs just fine.) example: Calculating simulated responses year 2000. see density plot continuous construct values simulated population year 2000. vertical lines density plot represent thresholds cut continuous construct ordinal responses. Values first (leftmost) threshold become response score “1”, first second threshold, response score “2” .  see resulting simulated response distribution. barchart shows relative frequency five possible response options.","code":"# helper function that allows us to cut continuous values into ordinal chunks cut_responses <- function(x, breaks){   ord_vec <- cut(x, c(-Inf, breaks, Inf), labels = FALSE)   return(ord_vec) } cutting_example <- sim_df |>  filter(year == 2000) |>    mutate(     example_response = cut_responses(       simulated_true_score,       c(-1.5, -0.3, 0.5, 2)     )   )   cutting_example |>    ggplot()+   geom_density(aes(simulated_true_score))+   geom_vline(xintercept = c(-1.5, -0.5, 0.5, 1.5))+   theme_minimal() cutting_example |>    count(example_response) |>    mutate(`relative frequency (%)` = 100 * n / sum(n)) |>    ggplot(aes(example_response, `relative frequency (%)`))+   geom_bar(stat = \"identity\")+   theme_minimal()+   ggtitle(\"Example for a simulated response distribution\")"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"defining-four-question-versions","dir":"Articles","previous_headings":"02 Simulating survey responses","what":"Defining four question versions","title":"Questionlink tutorial","text":"Now apply process simulate different questions. means questions capture concept, different question wording, different response scales. differences mean continuous true score distribution cut different observed response distributions, thresholds differ. Specifically, simulate four different questions (, B, C, D), capture simulated construct. Questions , B, C 5-point response scales. Questions B C based thresholds question , additively shifted (different mean response) multiplicatively stretched (different standard deviation). Question D, meanwhile, 10-point instrument, demonstrate QuestionLink can handle different numbers response options ease.","code":"response_thresholds_A <- c(-1.5, -0.5, 0.5, 1.5) response_thresholds_B <- (response_thresholds_A - 0.5) * 1.5 response_thresholds_C <- (response_thresholds_A + 0.5) * 0.7 response_thresholds_D <- seq(-1, 2, length.out = 9)  sim_df <- sim_df |>    mutate(     question_A = cut_responses(simulated_true_score, response_thresholds_A),     question_B = cut_responses(simulated_true_score, response_thresholds_B),     question_C = cut_responses(simulated_true_score, response_thresholds_C),     question_D = cut_responses(simulated_true_score, response_thresholds_D)   )  sim_df |>    head() |>    format_table()"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"preparing-long-format-for-questionlink","dir":"Articles","previous_headings":"02 Simulating survey responses","what":"Preparing long format for QuestionLink","title":"Questionlink tutorial","text":"Currently, four questions represented wide format data frame. means four variables, one question. also means four responses every row. However, QuestionLink expects data long-format. means row dataframe represents single response. response associated year (response collected) question (represents different measurement instruments). Transforming data wide long format easily done tidyr::pivot_longer(). see first six rows new, long format data frame:","code":"qlink_format_df <-   sim_df |>    select(year, contains(\"question\")) |>    pivot_longer(contains(\"question\"), values_to = \"response\") |>    separate(name, into = c(\"discard\", \"question\")) |>    select(-discard)  qlink_format_df |> head() |> format_table()"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"overview-of-response-distributions","dir":"Articles","previous_headings":"02 Simulating survey responses > Preparing long format for QuestionLink","what":"Overview of response distributions","title":"Questionlink tutorial","text":"see simulated response distributions across four question variants across years. Note plot shows full decades 1980, 1990, 2000, 2010, 2020.","code":"qlink_format_df |>    filter(year %% 10 == 0) |>    count(year, question, response) |>    group_by(year, question) |>    mutate(     response = factor(response),     relative_frequency = 100 * n / sum(n) # Calculates relative response frequencies   ) |>    ggplot(aes(response, relative_frequency))+   facet_grid(     rows = vars(year),     cols = vars(question),     scales = \"free_x\"   )+   geom_bar(stat = \"identity\")+   theme_minimal(base_size = 16)+   theme(     panel.grid.major.x = element_blank()   )"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"creating-artificial-gaps-in-the-timeseries","dir":"Articles","previous_headings":"02 Simulating survey responses","what":"Creating artificial “gaps” in the timeseries","title":"Questionlink tutorial","text":"One main advantages QuestionLink helps find opportunities harmonization across many different question variants, surveys respective waves. showcase , create gaps time-series simulated question variants. plausible situation, different survey programs begin end time series different intervals. First, current simulated data without gaps time-series:","code":"qlink_format_all_years_df <- qlink_format_df  plot_question_years <- function(combined_df){      year_min = min(combined_df$year)   year_max = max(combined_df$year)   years_vec = c(year_min:year_max)   major_breaks_vec = years_vec[years_vec %% 5 == 0]      combined_df |>      group_by(year, question) |>      summarise() |>      ungroup() |>      arrange(question) |>      mutate(question = fct_rev(question)) |>      ggplot(aes(year, question, color = question))+     geom_point(size = 3)+     scale_x_continuous(breaks = major_breaks_vec,                        minor_breaks = years_vec)+     theme_minimal(base_size = 16)+     theme(legend.position = \"none\") }  qlink_format_df |> plot_question_years() #> `summarise()` has grouped output by 'year'. You can override using the #> `.groups` argument."},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"showcasing-the-time-relaxation-feature","dir":"Articles","previous_headings":"02 Simulating survey responses > Creating artificial “gaps” in the timeseries","what":"Showcasing the time-relaxation feature","title":"Questionlink tutorial","text":"logic OSE-RG, method behind QuestionLink, dictates match data different instruments gathered “population”. ideally mean data randomly sampled population (e.g., adult Germans) year. However, sometimes surveys collect data alternating years direct years easily matched. construct change dramatically year year, can “relax” constraint; example allow adjacent years. (information time-relaxed connections, see section types connections.) reason, make questions asked every two years. even years , B C, odd years D!","code":"qlink_format_df <- qlink_format_df |>    filter(!(question == \"A\" & year %% 2 != 0)) |>    filter(!(question == \"B\" & year %% 2 != 0)) |>    filter(!(question == \"C\" & year %% 2 != 0)) |>    filter(!(question == \"D\" & year %% 2 == 0))   qlink_format_df |>    plot_question_years() #> `summarise()` has grouped output by 'year'. You can override using the #> `.groups` argument."},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"showcasing-the-relay-link-feature","dir":"Articles","previous_headings":"02 Simulating survey responses > Creating artificial “gaps” in the timeseries","what":"Showcasing the relay link feature","title":"Questionlink tutorial","text":"QuestionLink can also bridge larger gaps joint time series, two questions overlap time . becomes possible relay links, QuestionLink harmonizes one question another relay question onwards actual target question. example data, create gap instruments B longer overlap. However, B overlap questions C D. Hence can form relay links -> C -> B -> D -> B. (information relay connections, see section types connections.) Thus arrive final simulated survey wave structure. (simplicity’s sake, assume question used one four different surveys sampling population, different waves schedules.)","code":"# Defining gaps in time series by defining the \"possible years\" for each question  possible_years_lists <- list(   A = c(2000:2015),   B = c(1980:1990),   C = c(1980:2020),   D = c(1985:2005) )  qlink_format_df <- qlink_format_df |>    mutate(     valid_year = map2_lgl(year, question, ~ .x %in% possible_years_lists[[.y]])   ) |>    filter(valid_year) |>    select(-valid_year)  qlink_format_df |>    plot_question_years() #> `summarise()` has grouped output by 'year'. You can override using the #> `.groups` argument."},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"does-questionlink-work","dir":"Articles","previous_headings":"","what":"03 Does QuestionLink work?","title":"Questionlink tutorial","text":"putting work simulate different survey responses construct, want harmonize . show easy QuestionLink, let us harmonize four simulated questions one pass. Later, discuss step respective options one one. now, note can complete entire harmonization process one pipe four lines code. example, harmonize towards format question “”.","code":"harmonized_df <- qlink_format_df |>     ql_prepare(use_relay = TRUE, time_relaxation = 1) |>    ql_harmonize() |>     ql_transform(target = \"A\")"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"results-of-questionlink","dir":"Articles","previous_headings":"03 Does QuestionLink work?","what":"Results of QuestionLink","title":"Questionlink tutorial","text":"work? Let us find plotting mean scores across time-series: unharmonized harmonized QuestionLink.  QuestionLink harmonized differences mean differences standard deviation. Hence, intercept slope four time-series now align. Subtantively speaking, means year can safely compare average score across four instruments. also means QuestionLink harmonized growth rate time (.e., slope), harmonizing standard deviation four questions. , veryify looking standard deviation directly:","code":"unharmonized_mean_plot <- qlink_format_df |>    ggplot(aes(year))+   geom_smooth(aes(y = response, color = question), se = FALSE, method = \"lm\")+   scale_y_continuous(limits = c(1,10), breaks = c(1:10), minor_breaks = NULL)+   theme_minimal()+   ggtitle(\"unharmonized\")  harmonized_mean_plot <- harmonized_df |>    ggplot(aes(year))+   geom_smooth(aes(y = median_equivalent, color = question), se = FALSE, method = \"lm\")+   scale_y_continuous(limits = c(1,10), breaks = c(1:10), minor_breaks = NULL)+   theme_minimal()+   ggtitle(\"QuestionLink harmonized\")  # Combining both plots with patchwork:: unharmonized_mean_plot + harmonized_mean_plot #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 50 rows containing non-finite values (`stat_smooth()`). unharmonized_sd_plot <- qlink_format_df |>    group_by(year, question) |>    summarise(     `standard deviation` = sd(response)   ) |>    ggplot(aes(year, `standard deviation`, color = question))+   geom_point()+   theme_minimal()+   ggtitle(\"unharmonized\")+   scale_y_continuous(limits = c(0,3), minor_breaks = NULL)+   theme_minimal() #> `summarise()` has grouped output by 'year'. You can override using the #> `.groups` argument.  harmonized_sd_plot <- harmonized_df |>    group_by(year, question) |>    summarise(     `standard deviation` = sd(median_equivalent)   ) |>    ggplot(aes(year, `standard deviation`, color = question))+   geom_point()+   theme_minimal()+   ggtitle(\"QuestionLink harmonized\")+   scale_y_continuous(limits = c(0,3), minor_breaks = NULL)+   theme_minimal() #> `summarise()` has grouped output by 'year'. You can override using the #> `.groups` argument.  unharmonized_sd_plot + harmonized_sd_plot"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"sec-insufficient-alternatives","dir":"Articles","previous_headings":"03 Does QuestionLink work?","what":"Insufficient alternatives","title":"Questionlink tutorial","text":"QuestionLink worked well, might ask effort worth . address concerns, let us look commonly considered alternatives.","code":""},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"z-standardization","dir":"Articles","previous_headings":"03 Does QuestionLink work? > Insufficient alternatives","what":"Z-standardization","title":"Questionlink tutorial","text":"First, let us look z-standardization. approach centers scales variables mean equals zero (\\(\\bar{x}=0\\)) standard deviation equals one (\\(S=1\\)). resulting scores called \\(z\\)-scores. formula quite simple: \\[ z=\\frac{x-\\bar{x}}{S} \\] center subtracting arithmetic mean scores score scale dividing standard deviation. One complexity z-standardization can standardize data-set different ways. example, now z-standardize simulated data-set four ways: Overall: standardize responses across four questions forty years one go. means scale mean sd entire vector response scores regardless question year. question: However, want harmonize differences four questions, might instead z-standardize question separately. means scaling responses question mean sd question separately. year: Another common idea z-standardize year year, regardless question. means scaling responses mean sd questions year year. year question combined: Lastly, might think harmonization requires z-standardization questions years time. means scaling responses mean sd question year separately. Note code , distinctions realized dplyr::group_by() function. function modifies following mutate statement scale() function standardizes correct mean sd.  four z-standardization solutions look might hoped. Let us look version turn discuss went wrong. Overall: apply z-standardization scores across questions years, nothing changes substantially. units now z-scores, question differences persist exactly . question: z-standardize question, get parallel lines. question timeseries centered zero middle. growth time. obviously longer represent true construct, grows linearly 1980 2020. year: Scaling year leads totally chaotic results. year scale mix mean standard deviation question. year question combined: Lastly, scaling year question results somewhat harmonized data, unfortunately time-series information lost. Instead steady growth true construct, now see change time .","code":"z_example_df <- qlink_format_df |>    mutate(     response_z_overall = scale(response)   ) |>    group_by(question) |>    mutate(     response_z_by_question = scale(response)   ) |>    ungroup() |>    group_by(year) |>    mutate(     response_z_by_year = scale(response)   ) |>    group_by(year, question) |>    mutate(     response_z_by_year_question = scale(response)   ) z_overall_plot <- z_example_df |>    ggplot(aes(year))+   geom_smooth(aes(y = response_z_overall, color = question), se = FALSE, method = \"lm\")+   #scale_y_continuous(limits = c(1,10), breaks = c(1:10), minor_breaks = NULL)+   theme_minimal()+   theme(legend.position = \"none\",         axis.title.y = element_blank(),)+   scale_y_continuous(limits = c(-4, 4))+   ggtitle(\"overall\")  z_by_question_plot <- z_example_df |>    ggplot(aes(year))+   geom_smooth(aes(y = response_z_by_question, color = question), se = FALSE, method = \"lm\")+   #scale_y_continuous(limits = c(1,10), breaks = c(1:10), minor_breaks = NULL)+   theme_minimal()+   theme(legend.position = \"none\",         axis.title.y = element_blank(),         axis.text.y = element_blank())+   scale_y_continuous(limits = c(-4, 4))+   ggtitle(\"by question\")  z_by_year_plot <- z_example_df |>    ggplot(aes(year))+   geom_smooth(aes(y = response_z_by_year, color = question), se = FALSE, method = \"lm\")+   #scale_y_continuous(limits = c(1,10), breaks = c(1:10), minor_breaks = NULL)+   theme_minimal()+   theme(legend.position = \"none\",         axis.title.y = element_blank(),         axis.text.y = element_blank())+   scale_y_continuous(limits = c(-4, 4))+   ggtitle(\"by year\")  z_by_year_question_plot <- z_example_df |>    ggplot(aes(year))+   geom_smooth(aes(y = response_z_by_year_question, color = question), se = FALSE, method = \"lm\")+   #scale_y_continuous(limits = c(1,10), breaks = c(1:10), minor_breaks = NULL)+   theme_minimal()+   theme(axis.title.y = element_blank(),         axis.text.y = element_blank())+   scale_y_continuous(limits = c(-4, 4))+   ggtitle(\"by year and question\")  # Combining both plots with patchwork:: z_overall_plot + z_by_question_plot + z_by_year_plot + z_by_year_question_plot +   plot_layout(ncol = 4) #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 372 rows containing non-finite values #> (`stat_smooth()`). #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"linear-stretching","dir":"Articles","previous_headings":"03 Does QuestionLink work? > Insufficient alternatives","what":"Linear Stretching","title":"Questionlink tutorial","text":"second frequently considered alternative linear stretching. method sets minimum maximum responses two questions different number scale points equal. process best understood examining following function. supply scores source question x want harmonize. also supply maximum minimum score source question x (max_source min_source) well maximum minimum score target question (max_target min_target). function linearly “stretches” responses x towards different scale point format target question. example, stretch 5-point response scale x towards 7-point response scale format y.  variants linear stretching POMP (percentage maximum possible) scaling range 0 1. simply variants linear stretching. Pomp transform x scores 1, 2, 3, 4, 5 values: scaling range 0 1 transform x scores 1, 2, 3, 4, 5 values:","code":"linear_stretching <- function(x,                                max_source,                                max_target,                                min_source = 1,                                min_target = 1){   x <- x - min_source #shift so that lowest score becomes 0   x <- x / (max_source - min_source) # scale to range from 0 to 1   x <- x * (max_target - min_target) # scale to range from 0 to target highest minus target lowest   x <- x + min_target # shift so that lowest becomes target lowest      return(x) } tibble(   x = c(1:5, NA, NA),   y = c(1:7),   x_stretched = linear_stretching(x,                                    max_source = 5, # original 5-point scale                                   max_target = 7, # 7-point target                                   min_source = 1,                                   min_target = 1) ) |>    pivot_longer(everything(), values_to = \"scores\", names_to = \"variable\") |>    ggplot(aes(scores, variable |> fct_rev()))+   geom_point(size = 2)+   geom_text(aes(label = scores), vjust = -0.5, size = 6)+   theme_minimal(base_size = 18)+   scale_y_discrete(\"\")+   scale_x_continuous(breaks = c(1:7)) #> Warning: Removed 4 rows containing missing values (`geom_point()`). #> Warning: Removed 4 rows containing missing values (`geom_text()`). linear_stretching(c(1:5),                    max_source = 5, # original 5-point scale                   max_target = 100, # 7-point target                   min_source = 1,                   min_target = 0) |>    paste0(collapse = \"; \") #> [1] \"0; 25; 50; 75; 100\" linear_stretching(c(1:5),                    max_source = 5, # original 5-point scale                   max_target = 1, # 7-point target                   min_source = 1,                   min_target = 0)|>    paste0(collapse = \"; \") #> [1] \"0; 0.25; 0.5; 0.75; 1\""},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"applying-linear-stretching","dir":"Articles","previous_headings":"03 Does QuestionLink work? > Insufficient alternatives > Linear Stretching","what":"Applying linear stretching","title":"Questionlink tutorial","text":"approach work? Let us find stretching responses towards format question . recall, minimum maximum response scores question: words, already see scores “D” transformed . Let us look result visually:  Linear stretching harmonize responses meaningful way. goal format question “”, questions deviate . Questions “B” “C” even remain unchanged, also 5-point scales. Question “D” transformed, intended.","code":"qlink_format_df |>    group_by(question) |>    summarise(min_score = min(response),             max_score = max(response)) #> # A tibble: 4 × 3 #>   question min_score max_score #>   <chr>        <int>     <int> #> 1 A                1         5 #> 2 B                1         5 #> 3 C                1         5 #> 4 D                1        10 stretched_df <- qlink_format_df |>     mutate(     stretched_response = ifelse(question == \"D\",                                 linear_stretching(response, 10, 5),                                 response)   ) unharmonized_plot <- qlink_format_df |>       ggplot(aes(year))+      geom_smooth(aes(y = response, color = question), se = FALSE, method = \"lm\")+      scale_y_continuous(limits = c(1,10), breaks = c(1:10), minor_breaks = NULL)+      theme_minimal()+      ggtitle(\"unharmonized\")    stretched_plot <- stretched_df |>       ggplot(aes(year))+      geom_smooth(aes(y = stretched_response, color = question), se = FALSE, method = \"lm\")+      scale_y_continuous(limits = c(1,10), breaks = c(1:10), minor_breaks = NULL)+      theme_minimal()+      ggtitle(\"linear stretch\")    # Combining both plots with patchwork::   unharmonized_plot + stretched_plot  #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"questionlink-step-by-step","dir":"Articles","previous_headings":"","what":"04 QuestionLink step by step","title":"Questionlink tutorial","text":"seeing usefulness QuestionLink hope motivated delve bit deeper use . earlier example, chained QuestionLink functions together single |> pipe. Now, however, look functions step step. also look two helper functions, allow us diagnose data set plot equating opportunities.","code":""},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"wrangling-our-combined-dataset","dir":"Articles","previous_headings":"04 QuestionLink step by step","what":"Wrangling our combined dataset","title":"Questionlink tutorial","text":"can start , need wrangle combined data correct form. means: \\(1\\) Bringing data -called long format, row data frame one response. \\(2\\) Naming columns along convention QuestionLink expects (mandatory: year, question, & response; optional: weight & population) \\(3\\) Inverting response scores inverted reversed items (see section “inverted items”). \\(4\\) Removing cases missing values (see section “missing values”).","code":""},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"long-format-data","dir":"Articles","previous_headings":"04 QuestionLink step by step > Wrangling our combined dataset","what":"Long format data","title":"Questionlink tutorial","text":"QuestionLink, decided format social scientists well acquainted : data set long format. depth explanation shape data long format, see : R Data Science (Wickham et al., 2023) common case data spread across waves. Consider toy example data wide format. , row one respondent answers across three survey waves. However, many analyses multilevel-models (QuestionLink), need bring data long format row one observation. R (using dplyr tidyverse), can easily lengthen data pivot_longer(). see first six rows new data frame long format. now three rows per respondent one row per observation (.e., one row per wave). QuestionLink need just long format structure, additional information. importantly, every observation (.e., response) need variable tell us question response collected. Conveniently, already step simulating example data. consider data frame prepared, find quite simple. row single response. three mandatory variables QuestionLink year response collected, question used collect response, response raw, harmonized score. Additionally, QuestionLink accepts two optional variables: weight population. learn “advanced use cases” later . However, short: weight allows us weight responses samples become comparable across source surveys. example might design weights, common practice several German survey programs sample new federal states former East Germany. Meanwhile, population allows us add information population response collected. QuestionLink avoids matching responses across populations, break assumptions observed score equating. One last requirement harmonizable data frame contains missing values. easily realized (tidyverse) R tidyr::drop_NA. However, many missing values source surveys, recommend look depth discussion missing values later .","code":"wide_format_example <- tibble(   respondent = c(1:5),   year_2000 = c(2,3,4,5,6),   year_2002 = c(6,3,4,3,6),   year_2004 = c(2,1,4,5,6) )  wide_format_example |> format_table() wide_format_example |>    pivot_longer(cols = contains(\"year_\"), names_to = \"wave\", values_to = \"score\") |>    head() |>    format_table() qlink_format_df |> head() |> format_table()"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"ql_prepare-finding-harmonization-connections","dir":"Articles","previous_headings":"04 QuestionLink step by step","what":"ql_prepare Finding harmonization connections","title":"Questionlink tutorial","text":"data frame correct format, can begin harmonization calling QuestionLink function ql_prepare: function call results QuestionLink object contains information opportunities harmonize questions . However, step process actual harmonization calculations performed. object mainly contains possible connections whole source data set! can extract connections using function attr() : consider first row, see can harmonize “source” question B year 1980 towards “target” question C, questions data year. convenient way look connections QuestionLink found use summary() method: see several sections summary(): “Summary: QuestionLink Prepare” shows QuestionLink process . also see number unique question combinations, explained soon. “Number found connections” show us found 34 “direct connections”, meaning two questions used exactly year population. now, two connection types zero. “Additional information” reminds us provide two optional variables weight population. now, fine. “Overview question combinations” interesting part output. shows questions can harmonize . also details connections . note currently harmonize questions questions. resolve soon. “Overview response options found” shows response values question . good moment reflect consistent expect. might find negative values (missings adequately coded) issues need resolved first. However, depth check, try ql_check , discuss later. seen “Overview question combinations”, yet fully harmonized questions. Specifically, harmonize source_question “” towards target_question “B” vice versa. also harmonize source_question “C” towards target_question “D” vice versa. can validate looking hood prepare object, contains found connections. find “direct” connections, allowed advanced QuestionLink features yet. Direct connections instances two questions asked year. current problem apparently direct connections questions. becomes apparent consider years question used:  harmonize directly “” “B”, long gap two time-series (1991 1999). also directly harmonize “C” “D” waves asking question “C” occurred even years questions asking “D” occurred odd years. Fortunately, QuestionLink can often compensate issues. just give permission .","code":"prepare_object <- qlink_format_df |>  ql_prepare() prepare_object |>    attr(\"connections\") |>    head() |>    format_table() prepare_object |> summary() #>  #> ── Summary: QuestionLink Prepare ─────────────────────────────────────────────── #> Current stage of the QuestionLink workflow: ql_prepare ✔ -> ql_harmonize -> #> ql_transform #>  #> • Number of unique question combinations: 4 #>  #> ── Number of found connections: ── #>  #> • Direct connections: 28 #> • Time relaxation connections: 0 #> • Relay connections: 0 #>  #> ── Additional information: ── #>  #> • No population variable supplied. Data is interpreted as comming from one #> population. #> • No weight variable was supplied. #>  #> ── Overview over question combinations: ── #>  #>  #>  #> Source question   Target question    Direct   Time relaxation   Relay #> ----------------  ----------------  -------  ----------------  ------ #> A                 C                       8                 0       0 #> C                 A                       8                 0       0 #> B                 C                       6                 0       0 #> C                 B                       6                 0       0 #>  #> ── Overview over response options found: ── #>  #>  #>  #> Question   Response options                User supplied  #> ---------  ------------------------------  -------------- #> A          1, 2, 3, 4, 5                   FALSE          #> B          1, 2, 3, 4, 5                   FALSE          #> C          1, 2, 3, 4, 5                   FALSE          #> D          1, 2, 3, 4, 5, 6, 7, 8, 9, 10   FALSE prepare_object |>    attr(\"connections\") |>     group_by(source_question,target_question,connection_type) |>     summarize(n = dplyr::n()) |>     pivot_wider(names_from = connection_type,                        values_from = n) |>     ungroup() |>    format_table() #> `summarise()` has grouped output by 'source_question', 'target_question'. You #> can override using the `.groups` argument. qlink_format_df |>   plot_question_years() #> `summarise()` has grouped output by 'year'. You can override using the #> `.groups` argument."},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"bridging-different-survey-rhythms-with-time_relaxation","dir":"Articles","previous_headings":"04 QuestionLink step by step > ql_prepare Finding harmonization connections","what":"Bridging different survey rhythms with time_relaxation","title":"Questionlink tutorial","text":"uncommon surveys slightly different wave rhythm . example, questions “C” “D” share long time series, slightly sync due even odd biyearly rhythms. proposed solution problem time relaxation, meaning allow equating connections adjacent years. time_relaxation = 1, example, allow QuestionLink harmonize responses 1990 Question C 1991 question D. may lead bias constructs change quickly time. Often, however, error negligible. Especially many waves. , current setup harmonize Question C ion 1990 D 1991 also 1899. symmetry mitigate much bias introduced time mismatch. activate feature specifying ql_prepare() time_relaxation = 1: Note now “Time relaxed connections” aside “direct connections”. indeed, can now harmonize “C” “D”. can easily verified using summary(). However, save space document, lets take look directly relevant table: Note now second column. Aside direct connections, now also time_relaxation connections. pattern NAs also shows us instruments can harmonized direct, others time relaxed connections.","code":"qlink_format_df |> ql_prepare(time_relaxation = 1) #>  #> ── QuestionLink Object Type: QuestionLink Prepare ────────────────────────────── #> Current stage of the QuestionLink workflow: ql_prepare ✔ -> ql_harmonize -> #> ql_transform #>  #> • Number of unique question combinations: 10 #>  #> ── Number of found connections: ── #>  #> • Direct connections: 28 #> • Time relaxation connections: 72 #> • Relay connections: 0 #>  #> ── Additional information: ── #>  #> • No population variable supplied. Data is interpreted as comming from one #> population. #> • No weight variable was supplied. #> For more information on the connections use summary(). #> qlink_format_df |> ql_prepare(time_relaxation = 1) |>    attr(\"connections\") |>     group_by(source_question,target_question,connection_type) |>     summarize(n = dplyr::n()) |>     pivot_wider(names_from = connection_type,                        values_from = n) |>     ungroup() |>    format_table() #> `summarise()` has grouped output by 'source_question', 'target_question'. You #> can override using the `.groups` argument."},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"bridging-long-gaps-in-timeseries-with-use_relay","dir":"Articles","previous_headings":"04 QuestionLink step by step > ql_prepare Finding harmonization connections","what":"Bridging long gaps in timeseries with use_relay","title":"Questionlink tutorial","text":"Next, want bridge gap “” “B” allowing relays, equating lingo: “chained equating”. idea follows: might connection “” “B”, connection “” “C” “C” “B”. Thus can use “C” relay, “chaining equating”. means nothing else transforming scores “” format “C” onwards format “B”. enable ql_prepare() argument use_relay = TRUE. Note function now displays “direct connections” also “relay connections”. indeed, look possible connections , see “” “B” can now harmonized relay connections: allow options time, get desired connections: remains save results object next step:","code":"qlink_format_df |> ql_prepare(use_relay = TRUE) #>  #> ── QuestionLink Object Type: QuestionLink Prepare ────────────────────────────── #> Current stage of the QuestionLink workflow: ql_prepare ✔ -> ql_harmonize -> #> ql_transform #>  #> • Number of unique question combinations: 6 #>  #> ── Number of found connections: ── #>  #> • Direct connections: 28 #> • Time relaxation connections: 0 #> • Relay connections: 96 #>  #> ── Additional information: ── #>  #> • No population variable supplied. Data is interpreted as comming from one #> population. #> • No weight variable was supplied. #> For more information on the connections use summary(). #> qlink_format_df |> ql_prepare(use_relay = TRUE) |>    attr(\"connections\") |>     group_by(source_question,target_question,connection_type) |>     summarize(n = dplyr::n()) |>     pivot_wider(names_from = connection_type,                        values_from = n) |>     ungroup() |>    format_table() #> `summarise()` has grouped output by 'source_question', 'target_question'. You #> can override using the `.groups` argument. qlink_format_df |>    ql_prepare(     time_relaxation = 1 ,     use_relay = TRUE) |>    attr(\"connections\") |>     group_by(source_question,target_question,connection_type) |>     summarize(n = dplyr::n()) |>     pivot_wider(names_from = connection_type,                        values_from = n) |>     ungroup() |>    format_table() #> `summarise()` has grouped output by 'source_question', 'target_question'. You #> can override using the `.groups` argument. prepared_connections <- qlink_format_df |>    ql_prepare(     time_relaxation = 1 ,     use_relay = TRUE)"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"ql_harmonize-calculating-the-harmonization-solutions","dir":"Articles","previous_headings":"04 QuestionLink step by step","what":"ql_harmonize Calculating the harmonization solutions","title":"Questionlink tutorial","text":"finding possible connections (.e., opportunities harmonization via equating), need actually calculate connections. , simply call ql_harmonize ql_prepare object. Note additional attributes settings . harmonization parameters defined prepare stage. Looking output, see now completed second three steps towards data harmonization! move , let us take quick look object ql_harmonize created: see object contains several components. Usually, need deal level details just want harmonize data. Nonetheless, two components important understanding ql_harmonize done. Firstly, ql_harmonize goes every single connection found ql_prepare. stored attribute connections_rec_tbl within object created ql_harmonize. look one connection (.e., one row connections_rec_tbl ): words, 1610 rows connection overview contains details connection (e.g., questions type connection) importantly: recoding table harmonize two instruments. However, want one robust recoding table instrument pair (“” “B”) directions (“” -> “B” & “B” -> “”). end, ql_harmonize condenses 1610 . Specifically, QuestionLink chooses median equivalent score across harmonization solutions given instrument pair direction (e.g., “” -> “B”). example, 97 connections can harmonize “source” question “” towards format “target” question “B”. However, condensed exactly one recoding table attribute summarized_rec_tbl: practice, however, need delve manually QuestionLink objects. Instead, can easily apply recoding tables next function: ql_transform.","code":"harmonization_solution <- prepared_connections |>    ql_harmonize() harmonization_solution |> str(max.level = 1) #>  'questionlink' chr \"questionlink_object\" #>  - attr(*, \"connections_rec_tbl\")= tibble [1,610 × 13] (S3: tbl_df/tbl/data.frame) #>  - attr(*, \"summarized_rec_tbl\")= tibble [100 × 5] (S3: tbl_df/tbl/data.frame) #>  - attr(*, \"data\")= tibble [92,000 × 5] (S3: tbl_df/tbl/data.frame) #>  - attr(*, \"population_flag\")= logi FALSE #>  - attr(*, \"weight_flag\")= logi FALSE #>  - attr(*, \"scale_min_max\")= list() n_connections <- harmonization_solution |>    attr(\"connections_rec_tbl\") |>    nrow()  harmonization_solution |>    attr(\"connections_rec_tbl\") |>    head(1) |>    t() |>    format_table() n_connections_A_B <- harmonization_solution |>    attr(\"connections_rec_tbl\") |>    filter(     source_question == \"A\",     target_question == \"B\"   ) |>    nrow() harmonization_solution |>    attr(\"summarized_rec_tbl\") |>    filter(     source_question == \"A\",     target_question == \"B\"   ) |>   format_table()"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"ql_transform-recoding-the-response-data","dir":"Articles","previous_headings":"04 QuestionLink step by step","what":"ql_transform Recoding the response data","title":"Questionlink tutorial","text":"ql_transform can recode data along equating solutions QuestionLink found. process requires us make two decisions: (1) question want harmonize towards (2) data want harmonize?","code":""},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"which-question-to-harmonize-towards","dir":"Articles","previous_headings":"04 QuestionLink step by step > ql_transform Recoding the response data","what":"1. Which question to harmonize towards?","title":"Questionlink tutorial","text":"QuestionLink harmonizes questions can interpreted format target question. words, want estimate respondents chosen target question based response gave another question concept. course different questions response options never perfect match. Instead, try find decimal value best positions response one question scale determined target question. perhaps easier understand visually example drawn harmonized questions political drawn QuestionLink:  harmonize question political interest ISSP survey program question political interest ALLBUS survey program. Note “interested” ISSP question equivalent “strongly” ALLBUS question. Instead, respondents chose “interested” ISSP either chosen “strongly” “strongly” ALLBUS. median equivalent value 1.63 can thus understood halfway concept intensity response scores 1 2 target question. important note decision target question mainly one easiest understand , colleagues, reviewers, eventual readers. Equating solutions symmetrical, meaning relationship “” -> “B” “B” -> “”. course recoding tables look different, underlying mathematical relationship formed equating .","code":""},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"what-data-do-you-want-to-harmonize","dir":"Articles","previous_headings":"04 QuestionLink step by step > ql_transform Recoding the response data","what":"2. What data do you want to harmonize?","title":"Questionlink tutorial","text":"QuestionLink allows either harmonize data use equating harmonize different data solutions calculated. convenient case harmonizing data lends equating. means combined data sufficient equating opportunities (.e., direct, time-relaxed, relay connections) harmonize questions towards chosen target question. important realize data points (e.g., waves) need connections. just need connections questions harmonize whole dataset one go. done applying ql_transform() function directly harmonization solution generated ql_harmonize(), like : newly harmonized response values can found column “median_equivalent”. data point already measured target question (“”), value simply copied (e.g., “3” stays “3”). projects, however, might data connections questions. might time overlap (e.g., year) questions relay connection compensate . might also happen data comprised separate non-probability samples say samples measure population. discuss issues section “Advanced use cases”. now, just imagine setup two pooled data sets. One necessary connections (e.g., simulated example data) another pooled data set actually want harmonize research . Thus call two pooled data sets harmonization data research data following example. Preparing harmonization research data: Note research data requires columns source_question response. contents source_question must match question names harmonization data. Using harmonization data harmonize research data: see easy introduce research data providing new_data argument ql_transform(). function add three columns: target_question, population, recoded responses median_equivalent. Also note missing values removed harmonization data, problem research data. ql_transform simply preserves missings harmonized solution.","code":"harmonization_solution |>    ql_transform(target_question = \"A\") |> # Note that we harmonize towards \"A\"   sample_n(10) |>    format_table() harmonization_data <- qlink_format_df  research_data <- tibble(   A = rep_len(c(1:5, NA), length.out = 100),   B = rep_len(c(1:5), length.out = 100),   C = rep_len(c(1:5), length.out = 100),   D = rep_len(c(1:10), length.out = 100) ) |>    mutate(across(everything(), sample)) |>  # Randomize score order   pivot_longer(everything(),                 names_to = \"source_question\",                 values_to = \"response\")   research_data |>    head() |>    format_table() harmonized_research_data <- harmonization_data |>    ql_prepare(time_relaxation = 1,               use_relay = TRUE) |>    ql_harmonize() |> # harmonize with harmonization data   ql_transform(     target_question = \"A\",     new_data = research_data) # introduce the research data #> Warning: ℹ `new_data` contains responses with no numerical equivalent in the recoding #>   database. #> The following entries have no numerical equivalent: #> • Source question: | Population: | Response option: NA  harmonized_research_data |>    head() |>    format_table()"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"helper-functions","dir":"Articles","previous_headings":"","what":"05 Helper functions","title":"Questionlink tutorial","text":"added three helper functions QuestionLink Package convenience. method summary() provides information harmonization data. already used method section “ql_prepare Finding harmonization connections”. method plot(), can plot time series opportunities harmonization. function ql_check(), validates data provided ql_prepare(). Since helper features use object created ql_prepare(), often good idea save results ql_repare() variable examine progressing :","code":"prepare_object <- qlink_format_df |>    ql_prepare(     use_relay = TRUE,     time_relaxation = 1   )"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"summary-summarising-the-harmonization-data","dir":"Articles","previous_headings":"05 Helper functions","what":"summary() Summarising the harmonization data","title":"Questionlink tutorial","text":"shown earlier, summary() used ql_prepare object leads extended version just print()ing object. always good first step.","code":"prepare_object |> summary() #>  #> ── Summary: QuestionLink Prepare ─────────────────────────────────────────────── #> Current stage of the QuestionLink workflow: ql_prepare ✔ -> ql_harmonize -> #> ql_transform #>  #> • Number of unique question combinations: 12 #>  #> ── Number of found connections: ── #>  #> • Direct connections: 28 #> • Time relaxation connections: 72 #> • Relay connections: 1510 #>  #> ── Additional information: ── #>  #> • No population variable supplied. Data is interpreted as comming from one #> population. #> • No weight variable was supplied. #>  #> ── Overview over question combinations: ── #>  #>  #>  #> Source question   Target question    Direct   Time relaxation   Relay #> ----------------  ----------------  -------  ----------------  ------ #> A                 C                       8                NA     140 #> C                 A                       8                NA     140 #> B                 C                       6                NA     140 #> C                 B                       6                NA     140 #> A                 B                      NA                NA      97 #> A                 D                      NA                 7     169 #> B                 A                      NA                NA      97 #> B                 D                      NA                 7     125 #> C                 D                      NA                22      84 #> D                 A                      NA                 7     169 #> D                 B                      NA                 7     125 #> D                 C                      NA                22      84 #>  #> ── Overview over response options found: ── #>  #>  #>  #> Question   Response options                User supplied  #> ---------  ------------------------------  -------------- #> A          1, 2, 3, 4, 5                   FALSE          #> B          1, 2, 3, 4, 5                   FALSE          #> C          1, 2, 3, 4, 5                   FALSE          #> D          1, 2, 3, 4, 5, 6, 7, 8, 9, 10   FALSE"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"plot-plotting-of-time-series","dir":"Articles","previous_headings":"05 Helper functions","what":"plot() Plotting of time series","title":"Questionlink tutorial","text":"call plot() ql_prepare() object, receive overview time series question. overview also show us, questions can harmonized QuestionLink. question connected “” green, can harmonize questions question target. question connected “” yellow can harmonize questions question target. question connected “none” red, question harmonized QuestionLink. practice, means can harmonize questions least one question connected “”. choose question target question, questions harmonized (even connected “”)! clear example section [choosing right target question].","code":"prepare_object |> plot()"},{"path":"https://matroth.github.io/questionlink/articles/questionlink_tutorial.html","id":"ql_check-assessing-the-harmonization-data","dir":"Articles","previous_headings":"05 Helper functions","what":"ql_check() Assessing the harmonization data","title":"Questionlink tutorial","text":"ql_check() function performs number checks data read ql_prepare(). However, apply simulated data set synthetic perfection, get valid check-marks four questions. break data showcase ql_check(). response minimum maximum used scale possible responses 1 5, impossible, unlikely respondents chose 3. Thus, ql_check() throws us warning “response options minimum maximum \\[Question\\] used” details year(s) case. show , filter cases respondents chose 3 question B: point might ask QuestionLink knows minimum maximum score question . case, infers information empirically data. However, cleaner way provide response scale information meta-data ql_prepare(). covered “advanced use cases” section. Multiple Versions \\[question\\] found next way break data deleting responses 5 question C, one year (1980). happens, 5 also maximum score C. triggers warning “multiple Versions C found”. ql_check details two “versions” C found. One version values 1, 2, 3, 4 another version values 1, 2, 3, 4, 5. also lists respective years. way can easily find instances read invalid values, example. Negative responses found special case negative values. cases negative response values actually valid. example, response scales centered around zero, -2, -1, 0, 1, 2. However, far likely negative value missing value code (e.g., -99). replace response 1 question C -99. causes new warning: “Negative responses found C”. cases best carefully reexamine values harmonization data summary() looking respective survey documentation data sources.","code":"qlink_format_df |>    ql_prepare(     use_relay = TRUE,     time_relaxation = 1   ) |>    ql_check() #> ── A ✔ ── #>  #> ── B ✔ ── #>  #> ── C ✔ ── #>  #> ── D ✔ ── #> qlink_format_df |>    filter(!(question == \"B\" & response == 3)) |>    ql_prepare(     use_relay = TRUE,     time_relaxation = 1   ) |>    ql_check() #> ── A ✔ ── #>  #> ── B ── #>  #> Issue: Not all response options between the minimum and maximum of B were used. #> Year(s): 1980, 1982, 1984, 1986, 1988, 1990 #>  #> ── C ✔ ── #>  #> ── D ✔ ── #> qlink_format_df |>    filter(!(year == 1980 & question == \"C\" & response == 5)) |>    ql_prepare(     use_relay = TRUE,     time_relaxation = 1   ) |>    ql_check() #> ── A ✔ ── #>  #> ── B ✔ ── #>  #> ── C ── #>  #> Issue: Mutliple Versions of C were found. #> Version 1 #> • Has the following response options: 1, 2, 3, 4 #> • Occures in the following years: 1980 #> Version 2 #> • Has the following response options: 1, 2, 3, 4, 5 #> • Occures in the following years: 1982, 1984, 1986, 1988, 1990, 1992, 1994, #> 1996, 1998, 2000, 2002, 2004, 2006, 2008, 2010, 2012, 2014, 2016, 2018, 2020 #> ℹ Ensure that each question has only one version by defining a minimum and #> maximum of a scale with the scale_min_max argument in ql_prepare() or by only #> including one version of the question. #>  #> ── D ✔ ── #> qlink_format_df |>    mutate(     response = ifelse(question == \"C\" & response == 1,     -99, response)     ) |>    ql_prepare(     use_relay = TRUE,     time_relaxation = 1   ) |>    ql_check() #> ── A ✔ ── #>  #> ── B ✔ ── #>  #> ── C ── #>  #> Issue: Not all response options between the minimum and maximum of C were used. #> Year(s): 1980, 1982, 1984, 1986, 1988, 1990, 1992, 1994, 1996, 1998, 2000, #> 2002, 2004, 2006, 2008, 2010, 2012, 2014, 2016, 2018, 2020 #>  #> Issue: Negative responses were found for C.: #> Year(s): 1980, 1982, 1984, 1986, 1988, 1990, 1992, 1994, 1996, 1998, 2000, #> 2002, 2004, 2006, 2008, 2010, 2012, 2014, 2016, 2018, 2020 #>  #> ── D ✔ ── #>"},{"path":"https://matroth.github.io/questionlink/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthias Roth. Author, maintainer. Ranjit Konrad Singh. Author.","code":""},{"path":"https://matroth.github.io/questionlink/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Roth M, Singh R (2024). questionlink: Harmonizing single item survey questions construct. R package version 0.0.0.9000, https://matroth.github.io/questionlink/.","code":"@Manual{,   title = {questionlink: Harmonizing single item survey questions on the same construct},   author = {Matthias Roth and Ranjit Konrad Singh},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://matroth.github.io/questionlink/}, }"},{"path":"https://matroth.github.io/questionlink/reference/plot.questionlink_prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function plotting found connections between questions — plot.questionlink_prepare","title":"Plot function plotting found connections between questions — plot.questionlink_prepare","text":"Plot function plotting found connections questions","code":""},{"path":"https://matroth.github.io/questionlink/reference/plot.questionlink_prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function plotting found connections between questions — plot.questionlink_prepare","text":"","code":"# S3 method for questionlink_prepare plot(   x,   major_breaks_divisor = 10,   minor_breaks_divisor = 1,   combine_population_plots = T )"},{"path":"https://matroth.github.io/questionlink/reference/plot.questionlink_prepare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function plotting found connections between questions — plot.questionlink_prepare","text":"x questionlink prepare object. major_breaks_divisor Divisor major breaks x-axis. minor_breaks_divisor Divisor minor breaks x-axis. combine_population_plots handle plotting multiple populations supplied.","code":""},{"path":"https://matroth.github.io/questionlink/reference/print.questionlink_harmonize.html","id":null,"dir":"Reference","previous_headings":"","what":"Print information on ql_harmonize object — print.questionlink_harmonize","title":"Print information on ql_harmonize object — print.questionlink_harmonize","text":"Displays progress questionlink workflow highlevel overview number found connections.","code":""},{"path":"https://matroth.github.io/questionlink/reference/print.questionlink_harmonize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print information on ql_harmonize object — print.questionlink_harmonize","text":"","code":"# S3 method for questionlink_harmonize print(x, ...)"},{"path":"https://matroth.github.io/questionlink/reference/print.questionlink_harmonize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print information on ql_harmonize object — print.questionlink_harmonize","text":"x object type \"questionlink_harmonize\"","code":""},{"path":"https://matroth.github.io/questionlink/reference/print.questionlink_prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Print information on ql_prepare object — print.questionlink_prepare","title":"Print information on ql_prepare object — print.questionlink_prepare","text":"Displays progress questionlink workflow highlevel overview number found connections.","code":""},{"path":"https://matroth.github.io/questionlink/reference/print.questionlink_prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print information on ql_prepare object — print.questionlink_prepare","text":"","code":"# S3 method for questionlink_prepare print(x)"},{"path":"https://matroth.github.io/questionlink/reference/print.questionlink_prepare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print information on ql_prepare object — print.questionlink_prepare","text":"x object type \"questionlink_prepare\"","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the supplied data for common pitfalls in the harmonization process — ql_check","title":"Checks the supplied data for common pitfalls in the harmonization process — ql_check","text":"ql_check() performs plausbility checks supplied data. prints messages inconsistencies data found may influence results harmonization. particular, three checks performed:","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the supplied data for common pitfalls in the harmonization process — ql_check","text":"","code":"ql_check(ql_prepare_object)"},{"path":"https://matroth.github.io/questionlink/reference/ql_check.html","id":"check-if-multiple-versions-of-the-same-question-are-found","dir":"Reference","previous_headings":"","what":"Check if multiple versions of the same question are found","title":"Checks the supplied data for common pitfalls in the harmonization process — ql_check","text":"question associated one set response options. one set response options found one year (e.g. 1,2,3,4 year 2000) another set found another year (e.g. 1,2,3  year 2004) may problem data, missing cases falsly exculded cases. Make sure include one version question, harmonization may lead wrong results.","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_check.html","id":"check-if-negative-responses-are-found","dir":"Reference","previous_headings":"","what":"Check if negative responses are found","title":"Checks the supplied data for common pitfalls in the harmonization process — ql_check","text":"Negative values used represent missing values sort survey data files. Check whether negative values valid responses datafile (ignore message valid).","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_check.html","id":"check-if-response-options-are-not-used-in-a-scale","dir":"Reference","previous_headings":"","what":"Check if response options are not used in a scale","title":"Checks the supplied data for common pitfalls in the harmonization process — ql_check","text":"Missing response options (e.g. 4 point scale 1,2,4, response option 3 missing), can lead false harmonization results. response options missing, check responses falsely excluded dataset. check utilizes information supplied 'scale_min_max' argument ql_prepare(). scale_min_max left empty, minimum maximum found data used.","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_harmonize.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize ql_prepare object — ql_harmonize","title":"Harmonize ql_prepare object — ql_harmonize","text":"Harmonizes harmonization opportunities found 'ql_prepare()' creating recoding tables harmonization opportunity.","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_harmonize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize ql_prepare object — ql_harmonize","text":"","code":"ql_harmonize(ql_prepare_object)"},{"path":"https://matroth.github.io/questionlink/reference/ql_harmonize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize ql_prepare object — ql_harmonize","text":"ql_prepare_object object type questionlink_prepare, created 'ql_prepare()'","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_harmonize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize ql_prepare object — ql_harmonize","text":"object type 'questionlink' 'questionlink_harmonize'","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_harmonize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Harmonize ql_prepare object — ql_harmonize","text":"function step 2 3 questionlink harmonization workflow. Depending number harmonization opportunities, may take time.","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data for harmonization — ql_prepare","title":"Prepare data for harmonization — ql_prepare","text":"function prepares data harmonization Observed Score Equating Random Groups design (OSE-RG) finding possible opportunities harmonization data.","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for harmonization — ql_prepare","text":"","code":"ql_prepare(   data,   use_relay = F,   allowed_direct_connections = NULL,   allowed_relay_connections = NULL,   time_relaxation = 0,   remove_circular_relays = TRUE,   scale_min_max = list() )"},{"path":"https://matroth.github.io/questionlink/reference/ql_prepare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data for harmonization — ql_prepare","text":"data tibble/data.frame containing data format outlined details . use_relay logical indicating whether relay connections calculated. Default = FALSE. allowed_direct_connections filtering direct connections. documented moment. allowed_relay_connections filtering relay connections.   documented moment. time_relaxation numeric specifies much time allowed differ establish direct connections. Default = 0. remove_circular_relays Logical whether circular relays (relays source question target question removed). Default TRUE. scale_min_max named list contains numeric vectors length two, e.g. 'list(\"Question \" = c(0,5))'. name numeric vector correspond one questions supplied 'data'.first element numeric vector minimum scale, second element maximum scale. supplied possible response options used respondents. See Details information.","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_prepare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data for harmonization — ql_prepare","text":"object type 'questionlink' 'questionlink_prepare'.","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_prepare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare data for harmonization — ql_prepare","text":"OSE-RG can used data two question measuring construct used population roughly similar times (e.g. year). data supplied tibble/data.frame \"long format\". data.frame/tibble following columns names variable types: year: Numeric variable specifies year survey conducted. Can type Date Factor. units time needed look . question: Character variable specifies kind question asked. response: Numeric variable contains response values. NAs missings removed. Note responses recoded higher values represent meaning scale. (optional) weight: Numeric variable contains weight associated response. (optional) population: Character variable describes population response attributed . Data harmonized within one population. population supplied data treated originate population.","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data using questionlink recoding tables — ql_transform","title":"Transform data using questionlink recoding tables — ql_transform","text":"Transforms data using recoding tables obtained using 'ql_prepare() |> ql_harmoninze().","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data using questionlink recoding tables — ql_transform","text":"","code":"ql_transform(ql_harmonize_object, target_question, new_data)"},{"path":"https://matroth.github.io/questionlink/reference/ql_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data using questionlink recoding tables — ql_transform","text":"ql_harmonize_object object type questionlink_harmonize, created 'ql_harmonize()' target_question character value specifying question serves transformation target. new_data data frame tibble contains following columns \"question\", \"response\". data frame also needs contain column \"population\", column also used 'ql_prepare()' step.","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform data using questionlink recoding tables — ql_transform","text":"object type 'questionlink' 'questionlink_harmonize'","code":""},{"path":"https://matroth.github.io/questionlink/reference/ql_transform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform data using questionlink recoding tables — ql_transform","text":"function step 3 3 questionlink harmonization workflow. function either transforms data supplied harmonization workflow, transformes new data, can added via \"new_data\" argument. Circular relays: circular relays set TRUE (default FALSE) invocation ql_prepare(), results ql_transform() contain numerical equivalents found using relays. circular relays used, results ql_transformed contain response options target questions supplied data.","code":""},{"path":"https://matroth.github.io/questionlink/reference/questionlink_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Questionlink example dataset — questionlink_example_data","title":"Questionlink example dataset — questionlink_example_data","text":"example dataset correct format questionlink functions. also used vignette \"questionlink_tutorial\".","code":""},{"path":"https://matroth.github.io/questionlink/reference/questionlink_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Questionlink example dataset — questionlink_example_data","text":"","code":"questionlink_example_data"},{"path":[]},{"path":"https://matroth.github.io/questionlink/reference/questionlink_example_data.html","id":"questionlink-example-data","dir":"Reference","previous_headings":"","what":"questionlink_example_data","title":"Questionlink example dataset — questionlink_example_data","text":"data frame 328,000 rows 4 columns: year year numeric format question question identifier. response Scale responses respondents (case simulated). weight column respondent specific weights. case 1.","code":""},{"path":"https://matroth.github.io/questionlink/reference/summary.questionlink_harmonize.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function, printing full list connections — summary.questionlink_harmonize","title":"Summary function, printing full list connections — summary.questionlink_harmonize","text":"Summary function, printing full list connections","code":""},{"path":"https://matroth.github.io/questionlink/reference/summary.questionlink_harmonize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function, printing full list connections — summary.questionlink_harmonize","text":"","code":"# S3 method for questionlink_harmonize summary(object, ...)"},{"path":"https://matroth.github.io/questionlink/reference/summary.questionlink_prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function, printing full list connections — summary.questionlink_prepare","title":"Summary function, printing full list connections — summary.questionlink_prepare","text":"Summary function, printing full list connections","code":""},{"path":"https://matroth.github.io/questionlink/reference/summary.questionlink_prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function, printing full list connections — summary.questionlink_prepare","text":"","code":"# S3 method for questionlink_prepare summary(object, ...)"}]
